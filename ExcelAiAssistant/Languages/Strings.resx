<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ChatBox_btnNewChat_Tips" xml:space="preserve">
    <value>新建对话</value>
  </data>
  <data name="ChatBox_btnHistory_Tips" xml:space="preserve">
    <value>历史对话</value>
  </data>
  <data name="ChatBox_Caption" xml:space="preserve">
    <value>新对话</value>
  </data>
  <data name="ChatBox_Title" xml:space="preserve">
    <value>ExcelAI助手</value>
  </data>
  <data name="RibbonBtn_About" xml:space="preserve">
    <value>关于程序</value>
  </data>
  <data name="RibbonBtn_ModelConfig" xml:space="preserve">
    <value>模型设置</value>
  </data>
  <data name="RibbonBtn_OpenBox" xml:space="preserve">
    <value>显示助手</value>
  </data>
  <data name="RibbonTab_Title" xml:space="preserve">
    <value>Excel AI Assistant</value>
  </data>
  <data name="ChatBox_menuChangeModel_ErrorNote" xml:space="preserve">
    <value>请先配置模型参数！</value>
  </data>
  <data name="ChatBox_btnSend_Text" xml:space="preserve">
    <value>发送</value>
  </data>
  <data name="ChatBox_btnSend_Tips" xml:space="preserve">
    <value>发送(Ctrl+Enter)</value>
  </data>
  <data name="FormModelConfig_Caption" xml:space="preserve">
    <value>参数设置</value>
  </data>
  <data name="FormModelConfig_btnAddNew" xml:space="preserve">
    <value>添加新模型</value>
  </data>
  <data name="FormModelConfig_btnDelete" xml:space="preserve">
    <value>删除模型</value>
  </data>
  <data name="FormModelConfig_btnImport" xml:space="preserve">
    <value>导入模型</value>
  </data>
  <data name="FormModelConfig_btnExport" xml:space="preserve">
    <value>导出模型</value>
  </data>
  <data name="FormModelConfig_colModelName" xml:space="preserve">
    <value>模型名称</value>
  </data>
  <data name="FormModelConfig_colBaseUrl" xml:space="preserve">
    <value>接口地址</value>
  </data>
  <data name="FormModelConfig_colApiType" xml:space="preserve">
    <value>接口类型</value>
  </data>
  <data name="FormModelConfig_colEnable" xml:space="preserve">
    <value>启用</value>
  </data>
  <data name="FormModelConfig_btnDelete_Confirm" xml:space="preserve">
    <value>确实要删除选中的模型么？</value>
  </data>
  <data name="Global_Operation_Confirm" xml:space="preserve">
    <value>操作确认</value>
  </data>
  <data name="Global_Operation_Failure" xml:space="preserve">
    <value>操作失败</value>
  </data>
  <data name="Global_Operation_Success" xml:space="preserve">
    <value>操作成功</value>
  </data>
  <data name="FormAddNewModel_Caption" xml:space="preserve">
    <value>添加模型</value>
  </data>
  <data name="Global_Operation_Edit" xml:space="preserve">
    <value>修改</value>
  </data>
  <data name="Global_Operation_Delete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="FormAddNewModel_lbModelName" xml:space="preserve">
    <value>模型名称：</value>
  </data>
  <data name="FormAddNewModel_lbBaseUrl" xml:space="preserve">
    <value>接口地址：</value>
  </data>
  <data name="FormAddNewModel_lbAppkey" xml:space="preserve">
    <value>访问密钥：</value>
  </data>
  <data name="FormAddNewModel_lbApiType" xml:space="preserve">
    <value>接口类型：</value>
  </data>
  <data name="Global_Operation_Save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="FormAddNewModel_lbPrompt" xml:space="preserve">
    <value>提 示 词：</value>
  </data>
  <data name="FormAddNewModel_cbEnable" xml:space="preserve">
    <value>启用该模型</value>
  </data>
  <data name="FormAddNewModel_NoModelName_Error" xml:space="preserve">
    <value>模型名称是必填参数。</value>
  </data>
  <data name="FormAddNewModel_NoBaseUrl_Error" xml:space="preserve">
    <value>接口地址是必填参数。</value>
  </data>
  <data name="FormAbout_Caption" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="FormAbout_SysName" xml:space="preserve">
    <value>Excel AI Assistant</value>
  </data>
  <data name="FormAbout_Info" xml:space="preserve">
    <value>V1.1.50401
王珂作品
hcling97@hotmail.com
本软件遵循GPL3.0开源协议</value>
  </data>
  <data name="FormAbout_Link" xml:space="preserve">
    <value>https://github.com/NixerWong/ExcelAiAssistant</value>
  </data>
  <data name="Global_Operation_SelectAll" xml:space="preserve">
    <value>全选</value>
  </data>
  <data name="Global_Operation_Copy" xml:space="preserve">
    <value>复制</value>
  </data>
  <data name="Global_Operation_Paste" xml:space="preserve">
    <value>粘贴</value>
  </data>
  <data name="FormModelConfig_Export_title" xml:space="preserve">
    <value>导出参数配置</value>
  </data>
  <data name="FormModelConfig_Export_filter" xml:space="preserve">
    <value>Json 文件|*.json</value>
  </data>
  <data name="FormModelConfig_Import_title" xml:space="preserve">
    <value>请选择需要导入的参数文件</value>
  </data>
  <data name="FormModelConfig_Import_filter" xml:space="preserve">
    <value>Json 文件|*.json</value>
  </data>
  <data name="CodeEditor_Exec_Text" xml:space="preserve">
    <value>执行</value>
  </data>
  <data name="CodeEditor_SaveCode_Text" xml:space="preserve">
    <value>将代码保存在Excel中</value>
  </data>
  <data name="Component_TryCode" xml:space="preserve">
    <value>尝试一下下面的代码。</value>
  </data>
  <data name="Component_DontComplyStandard" xml:space="preserve">
    <value>不符合Excel VBA代码规范，无法执行。</value>
  </data>
  <data name="Component_Exec_Error" xml:space="preserve">
    <value>执行过程发生异常，请确认：
1. 已启用VBA工程访问权限
2. VBA代码语法正确

异常信息：</value>
  </data>
  <data name="Component_Clean_Error" xml:space="preserve">
    <value>模块清理失败: </value>
  </data>
  <data name="Component_Excel_NotAvailable" xml:space="preserve">
    <value>Excel COM 应用程序不可用。</value>
  </data>
  <data name="Component_Reference_Dict_Error" xml:space="preserve">
    <value>添加字典引用失败。</value>
  </data>
</root>